#!/usr/bin/env php
<?php
date_default_timezone_set('America/New_York');

echo "Starting Build of site\n";

define('BUILD_DIR', dirname(__FILE__));
define('SITE_DIR', BUILD_DIR.'/site');
define('TEMPLATE_DIR', SITE_DIR.'/templates');
define('OUTPUT_DIR', BUILD_DIR.'/output');
define('STATIC_DIR', SITE_DIR.'/static');

define('FILE_EXTENSION', '.html');

// Make output dir if it doesn't exist
if(!file_exists(OUTPUT_DIR)) {
	mkdir(OUTPUT_DIR);
}

if(!file_exists(BUILD_DIR.'/vendor/autoload.php')) {
	echo "Missing dependencies. Please run `composer install`\n";
	exit();
}

// Include functions
require(BUILD_DIR.'/includes/functions.php');
// Include Libraries
require(BUILD_DIR.'/vendor/autoload.php');


if(!file_exists(OUTPUT_DIR)) {
	echo "Output dir does not exist; creating it\n";
	mkdir(OUTPUT_DIR);
}


echo "Building CSS file\n";
$css_data = '';
if($handle = opendir(SITE_DIR.'/css')) {
	while(false !== ($entry = readdir($handle))) {
		if($entry != '.' && $entry != '..') {
			$css_data .= file_get_contents(SITE_DIR.'/css/'.$entry);
		}
	}
	closedir($handle);
}
$css_data = Minify_CSS_Compressor::process($css_data);
$csssha = substr(sha1($css_data), 0, 7);
write_file(OUTPUT_DIR.'/style_'.$csssha.'.css', $css_data);
unset($css_data);



echo "Gettings Posts\n";
$post_data = get_all_items(SITE_DIR.'/posts');


echo "Building Post pages\n";
$previous_url = '';
$next_url = '';
foreach($post_data as $key => $post) {
	if(isset($post_data[$key + 1])) {
		$next_url = $post_data[$key + 1]['filename'];
	}
	else {
		$next_url = '';
	}
	$smarty = new Smarty();
	$smarty->template_dir = TEMPLATE_DIR;
	$smarty->assign($post);
	$smarty->assign('url', '/blog/'.$post['filename'].FILE_EXTENSION);
	$smarty->assign('csssha', $csssha);
	$have_previous = !empty($previous_url);
	$have_next = !empty($next_url);
	$smarty->assign('next_previous_block', $have_previous || $have_next);
	$smarty->assign('have_previous', $have_previous);
	$smarty->assign('have_next', $have_next);
	$smarty->assign('prevurl', '/blog/'.$previous_url.FILE_EXTENSION);
	$smarty->assign('nexturl', '/blog/'.$next_url.FILE_EXTENSION);
	$smarty->assign('dateraw', date('Y-m-d H:i:s', $post['date']));
	$smarty->assign('date', date('Y-m-d', $post['date']));
	$post_html = $smarty->fetch(TEMPLATE_DIR.'/post.tpl');
	$post_html = Minify_HTML::minify($post_html);
	write_file(OUTPUT_DIR.'/blog/'.$post['filename'].FILE_EXTENSION, $post_html);
	$previous_url = $post['filename'];
}

echo "Gettings Pages\n";
$page_data = get_all_items(SITE_DIR.'/pages');

echo "Building Page pages\n";
foreach($page_data as $key => $page) {
	$smarty = new Smarty();
	$smarty->template_dir = TEMPLATE_DIR;
	$smarty->assign($page);
	$smarty->assign('url', $page['filename'].FILE_EXTENSION);
	$smarty->assign('csssha', $csssha);
	$smarty->assign('next_previous_block', false);
	$page_html = $smarty->fetch(TEMPLATE_DIR.'/page.tpl');
	$page_html = Minify_HTML::minify($page_html);
	write_file(OUTPUT_DIR.'/'.$page['filename'].FILE_EXTENSION, $page_html);
}


echo "Building Home Page\n";
$last_post = $post_data[count($post_data) - 1];
$smarty = new Smarty();
$smarty->template_dir = TEMPLATE_DIR;
$smarty->assign('csssha', $csssha);
$smarty->assign($last_post);
$smarty->assign('url', '/blog/'.$last_post['filename'].FILE_EXTENSION);
$have_previous = !empty($post_data[count($post_data) - 2]);
$smarty->assign('next_previous_block', $have_previous);
$smarty->assign('have_previous', $have_previous);
$smarty->assign('have_next', false);
if(empty($post_data[count($post_data) - 2])) {
	$smarty->assign('prevurl', '');
}
else {
	$smarty->assign('prevurl', '/blog/'.$post_data[count($post_data) - 2]['filename'].FILE_EXTENSION);
}
$smarty->assign('nexturl', '');
$smarty->assign('dateraw', date('Y-m-d H:i:s', $last_post['date']));
$smarty->assign('date', date('Y-m-d', $last_post['date']));
$html = $smarty->fetch(TEMPLATE_DIR.'/home.tpl');
$html = Minify_HTML::minify($html);
write_file(OUTPUT_DIR.'/index.html', $html);


echo "Copying static files\n";
rcopy(STATIC_DIR, OUTPUT_DIR);
